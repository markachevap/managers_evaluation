# Generated by Django 5.2.1 on 2025-05-17 17:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

def create_default_criteria(apps, schema_editor):
    EvaluationCriteria = apps.get_model('evaluations', 'EvaluationCriteria')

    criteria_list = [
        {'criteria_type': 'production', 'weight': 0.2, 'description': 'Производственные показатели', 'is_active': True},
        {'criteria_type': 'clients', 'weight': 0.2, 'description': 'Удовлетворенность клиентов', 'is_active': True},
        {'criteria_type': 'plans', 'weight': 0.2, 'description': 'Выполнение плановых показателей', 'is_active': True},
        {'criteria_type': 'teamwork', 'weight': 0.2, 'description': 'Командная работа', 'is_active': True},
        {'criteria_type': 'development', 'weight': 0.2, 'description': 'Личные достижения и развитие', 'is_active': True},
    ]

    for criteria in criteria_list:
        EvaluationCriteria.objects.get_or_create(**criteria)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluationCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('criteria_type', models.CharField(choices=[('production', 'Производственные показатели'), ('clients', 'Удовлетворенность клиентов'), ('plans', 'Выполнение плановых показателей'), ('teamwork', 'Командная работа'), ('development', 'Личные достижения и развитие')], default='production', max_length=100, unique=True, verbose_name='Тип критерия')),
                ('weight', models.FloatField(default=0.0)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'constraints': [
                    models.CheckConstraint(
                        check=models.Q(weight__gte=0) & models.Q(weight__lte=1),
                        name='weight_range'
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name='ManagerEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_date', models.DateField(verbose_name='Дата оценки')),
                ('period_start', models.DateField(verbose_name='Начало периода')),
                ('period_end', models.DateField(verbose_name='Конец периода')),
                ('notes', models.TextField(blank=True, verbose_name='Комментарии')),
                ('total_score', models.FloatField(blank=True, editable=False, help_text='Автоматически рассчитывается из оценок по критериям', null=True, verbose_name='Общий балл')),
                ('evaluator', models.ForeignKey(blank=True, limit_choices_to={'system_role': 'system_leader'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_evaluations', to=settings.AUTH_USER_MODEL, verbose_name='Оценщик')),
                ('manager', models.ForeignKey(limit_choices_to={'system_role': 'system_manager'}, on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
            ],
            options={
                'verbose_name': 'Оценка менеджера',
                'verbose_name_plural': 'Оценки менеджеров',
                'ordering': ['-evaluation_date'],
                'unique_together': {('manager', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='EvaluationScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(help_text='Оценка по данному критерию', verbose_name='Значение')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('criteria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evaluations.evaluationcriteria', verbose_name='Критерий оценки')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='evaluations.managerevaluation', verbose_name='Оценка менеджера')),
            ],
            options={
                'verbose_name': 'Оценка по критерию',
                'verbose_name_plural': 'Оценки по критериям',
                'ordering': ['criteria_id'],
                'unique_together': {('evaluation', 'criteria')},
            },
        ),
    ]
